package com.ctrip.asp.commom.dao.auto.model;

import java.util.ArrayList;
import java.util.List;

public class UcRoomalertLogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public UcRoomalertLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andPmscodeIsNull() {
            addCriterion("PmsCode is null");
            return (Criteria) this;
        }

        public Criteria andPmscodeIsNotNull() {
            addCriterion("PmsCode is not null");
            return (Criteria) this;
        }

        public Criteria andPmscodeEqualTo(String value) {
            addCriterion("PmsCode =", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeNotEqualTo(String value) {
            addCriterion("PmsCode <>", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeGreaterThan(String value) {
            addCriterion("PmsCode >", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeGreaterThanOrEqualTo(String value) {
            addCriterion("PmsCode >=", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeLessThan(String value) {
            addCriterion("PmsCode <", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeLessThanOrEqualTo(String value) {
            addCriterion("PmsCode <=", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeLike(String value) {
            addCriterion("PmsCode like", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeNotLike(String value) {
            addCriterion("PmsCode not like", value, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeIn(List<String> values) {
            addCriterion("PmsCode in", values, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeNotIn(List<String> values) {
            addCriterion("PmsCode not in", values, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeBetween(String value1, String value2) {
            addCriterion("PmsCode between", value1, value2, "pmscode");
            return (Criteria) this;
        }

        public Criteria andPmscodeNotBetween(String value1, String value2) {
            addCriterion("PmsCode not between", value1, value2, "pmscode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeIsNull() {
            addCriterion("HotelCode is null");
            return (Criteria) this;
        }

        public Criteria andHotelcodeIsNotNull() {
            addCriterion("HotelCode is not null");
            return (Criteria) this;
        }

        public Criteria andHotelcodeEqualTo(String value) {
            addCriterion("HotelCode =", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeNotEqualTo(String value) {
            addCriterion("HotelCode <>", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeGreaterThan(String value) {
            addCriterion("HotelCode >", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeGreaterThanOrEqualTo(String value) {
            addCriterion("HotelCode >=", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeLessThan(String value) {
            addCriterion("HotelCode <", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeLessThanOrEqualTo(String value) {
            addCriterion("HotelCode <=", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeLike(String value) {
            addCriterion("HotelCode like", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeNotLike(String value) {
            addCriterion("HotelCode not like", value, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeIn(List<String> values) {
            addCriterion("HotelCode in", values, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeNotIn(List<String> values) {
            addCriterion("HotelCode not in", values, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeBetween(String value1, String value2) {
            addCriterion("HotelCode between", value1, value2, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andHotelcodeNotBetween(String value1, String value2) {
            addCriterion("HotelCode not between", value1, value2, "hotelcode");
            return (Criteria) this;
        }

        public Criteria andRoomnoIsNull() {
            addCriterion("RoomNo is null");
            return (Criteria) this;
        }

        public Criteria andRoomnoIsNotNull() {
            addCriterion("RoomNo is not null");
            return (Criteria) this;
        }

        public Criteria andRoomnoEqualTo(String value) {
            addCriterion("RoomNo =", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoNotEqualTo(String value) {
            addCriterion("RoomNo <>", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoGreaterThan(String value) {
            addCriterion("RoomNo >", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoGreaterThanOrEqualTo(String value) {
            addCriterion("RoomNo >=", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoLessThan(String value) {
            addCriterion("RoomNo <", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoLessThanOrEqualTo(String value) {
            addCriterion("RoomNo <=", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoLike(String value) {
            addCriterion("RoomNo like", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoNotLike(String value) {
            addCriterion("RoomNo not like", value, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoIn(List<String> values) {
            addCriterion("RoomNo in", values, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoNotIn(List<String> values) {
            addCriterion("RoomNo not in", values, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoBetween(String value1, String value2) {
            addCriterion("RoomNo between", value1, value2, "roomno");
            return (Criteria) this;
        }

        public Criteria andRoomnoNotBetween(String value1, String value2) {
            addCriterion("RoomNo not between", value1, value2, "roomno");
            return (Criteria) this;
        }

        public Criteria andIscardIsNull() {
            addCriterion("IsCard is null");
            return (Criteria) this;
        }

        public Criteria andIscardIsNotNull() {
            addCriterion("IsCard is not null");
            return (Criteria) this;
        }

        public Criteria andIscardEqualTo(Integer value) {
            addCriterion("IsCard =", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardNotEqualTo(Integer value) {
            addCriterion("IsCard <>", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardGreaterThan(Integer value) {
            addCriterion("IsCard >", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsCard >=", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardLessThan(Integer value) {
            addCriterion("IsCard <", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardLessThanOrEqualTo(Integer value) {
            addCriterion("IsCard <=", value, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardIn(List<Integer> values) {
            addCriterion("IsCard in", values, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardNotIn(List<Integer> values) {
            addCriterion("IsCard not in", values, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardBetween(Integer value1, Integer value2) {
            addCriterion("IsCard between", value1, value2, "iscard");
            return (Criteria) this;
        }

        public Criteria andIscardNotBetween(Integer value1, Integer value2) {
            addCriterion("IsCard not between", value1, value2, "iscard");
            return (Criteria) this;
        }

        public Criteria andCardtypeIsNull() {
            addCriterion("CardType is null");
            return (Criteria) this;
        }

        public Criteria andCardtypeIsNotNull() {
            addCriterion("CardType is not null");
            return (Criteria) this;
        }

        public Criteria andCardtypeEqualTo(Integer value) {
            addCriterion("CardType =", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeNotEqualTo(Integer value) {
            addCriterion("CardType <>", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeGreaterThan(Integer value) {
            addCriterion("CardType >", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("CardType >=", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeLessThan(Integer value) {
            addCriterion("CardType <", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeLessThanOrEqualTo(Integer value) {
            addCriterion("CardType <=", value, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeIn(List<Integer> values) {
            addCriterion("CardType in", values, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeNotIn(List<Integer> values) {
            addCriterion("CardType not in", values, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeBetween(Integer value1, Integer value2) {
            addCriterion("CardType between", value1, value2, "cardtype");
            return (Criteria) this;
        }

        public Criteria andCardtypeNotBetween(Integer value1, Integer value2) {
            addCriterion("CardType not between", value1, value2, "cardtype");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("Amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("Amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Long value) {
            addCriterion("Amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Long value) {
            addCriterion("Amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Long value) {
            addCriterion("Amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Long value) {
            addCriterion("Amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Long value) {
            addCriterion("Amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Long value) {
            addCriterion("Amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Long> values) {
            addCriterion("Amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Long> values) {
            addCriterion("Amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Long value1, Long value2) {
            addCriterion("Amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Long value1, Long value2) {
            addCriterion("Amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andChecktimeIsNull() {
            addCriterion("CheckTime is null");
            return (Criteria) this;
        }

        public Criteria andChecktimeIsNotNull() {
            addCriterion("CheckTime is not null");
            return (Criteria) this;
        }

        public Criteria andChecktimeEqualTo(Long value) {
            addCriterion("CheckTime =", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeNotEqualTo(Long value) {
            addCriterion("CheckTime <>", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeGreaterThan(Long value) {
            addCriterion("CheckTime >", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeGreaterThanOrEqualTo(Long value) {
            addCriterion("CheckTime >=", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeLessThan(Long value) {
            addCriterion("CheckTime <", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeLessThanOrEqualTo(Long value) {
            addCriterion("CheckTime <=", value, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeIn(List<Long> values) {
            addCriterion("CheckTime in", values, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeNotIn(List<Long> values) {
            addCriterion("CheckTime not in", values, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeBetween(Long value1, Long value2) {
            addCriterion("CheckTime between", value1, value2, "checktime");
            return (Criteria) this;
        }

        public Criteria andChecktimeNotBetween(Long value1, Long value2) {
            addCriterion("CheckTime not between", value1, value2, "checktime");
            return (Criteria) this;
        }

        public Criteria andIspersonIsNull() {
            addCriterion("IsPerson is null");
            return (Criteria) this;
        }

        public Criteria andIspersonIsNotNull() {
            addCriterion("IsPerson is not null");
            return (Criteria) this;
        }

        public Criteria andIspersonEqualTo(Integer value) {
            addCriterion("IsPerson =", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonNotEqualTo(Integer value) {
            addCriterion("IsPerson <>", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonGreaterThan(Integer value) {
            addCriterion("IsPerson >", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsPerson >=", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonLessThan(Integer value) {
            addCriterion("IsPerson <", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonLessThanOrEqualTo(Integer value) {
            addCriterion("IsPerson <=", value, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonIn(List<Integer> values) {
            addCriterion("IsPerson in", values, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonNotIn(List<Integer> values) {
            addCriterion("IsPerson not in", values, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonBetween(Integer value1, Integer value2) {
            addCriterion("IsPerson between", value1, value2, "isperson");
            return (Criteria) this;
        }

        public Criteria andIspersonNotBetween(Integer value1, Integer value2) {
            addCriterion("IsPerson not between", value1, value2, "isperson");
            return (Criteria) this;
        }

        public Criteria andIsdoorIsNull() {
            addCriterion("IsDoor is null");
            return (Criteria) this;
        }

        public Criteria andIsdoorIsNotNull() {
            addCriterion("IsDoor is not null");
            return (Criteria) this;
        }

        public Criteria andIsdoorEqualTo(Integer value) {
            addCriterion("IsDoor =", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorNotEqualTo(Integer value) {
            addCriterion("IsDoor <>", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorGreaterThan(Integer value) {
            addCriterion("IsDoor >", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsDoor >=", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorLessThan(Integer value) {
            addCriterion("IsDoor <", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorLessThanOrEqualTo(Integer value) {
            addCriterion("IsDoor <=", value, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorIn(List<Integer> values) {
            addCriterion("IsDoor in", values, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorNotIn(List<Integer> values) {
            addCriterion("IsDoor not in", values, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorBetween(Integer value1, Integer value2) {
            addCriterion("IsDoor between", value1, value2, "isdoor");
            return (Criteria) this;
        }

        public Criteria andIsdoorNotBetween(Integer value1, Integer value2) {
            addCriterion("IsDoor not between", value1, value2, "isdoor");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIsNull() {
            addCriterion("Create_DateTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIsNotNull() {
            addCriterion("Create_DateTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeEqualTo(Long value) {
            addCriterion("Create_DateTime =", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotEqualTo(Long value) {
            addCriterion("Create_DateTime <>", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeGreaterThan(Long value) {
            addCriterion("Create_DateTime >", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeGreaterThanOrEqualTo(Long value) {
            addCriterion("Create_DateTime >=", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeLessThan(Long value) {
            addCriterion("Create_DateTime <", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeLessThanOrEqualTo(Long value) {
            addCriterion("Create_DateTime <=", value, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeIn(List<Long> values) {
            addCriterion("Create_DateTime in", values, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotIn(List<Long> values) {
            addCriterion("Create_DateTime not in", values, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeBetween(Long value1, Long value2) {
            addCriterion("Create_DateTime between", value1, value2, "createDatetime");
            return (Criteria) this;
        }

        public Criteria andCreateDatetimeNotBetween(Long value1, Long value2) {
            addCriterion("Create_DateTime not between", value1, value2, "createDatetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 13 16:31:51 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table uc_roomalert_log
     *
     * @mbggenerated Tue Mar 13 16:31:51 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}